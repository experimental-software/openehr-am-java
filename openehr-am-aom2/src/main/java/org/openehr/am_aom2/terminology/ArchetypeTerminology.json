{
    "attributes": [
        {
            "description": "True if this terminology only contains terms relating to a differential specialisation of the owning artefact, rather than a complete set.",
            "multiplicity": "1..1",
            "name": "is_differential",
            "type": "Boolean"
        },
        {
            "description": "Original language of the terminology, as set at artefact creation or parsing time; must be a code in the ISO 639-1 2 character language code-set.",
            "multiplicity": "1..1",
            "name": "original_language",
            "type": "String"
        },
        {
            "description": "Term code defining the meaning of the artefact as a whole, and always used as the id-code on the root node of the artefact. Must be defined in the `_term_definitions_` property.",
            "multiplicity": "1..1",
            "name": "concept_code",
            "type": "String"
        },
        {
            "description": "Directory of term definitions as a two-level table. The outer hash keys are language codes, e.g. `\"en\"`, `\"de\"`, while the inner hash keys are term codes, e.g. `\"id17\"`, `\"at4\"`.",
            "multiplicity": "1..1",
            "name": "term_definitions",
            "type": "Hash"
        },
        {
            "description": "Directory of bindings to external terminology codes and value sets, as a two-level table. The outer hash keys are terminology ids, e.g. `\"SNOMED_CT\"`, and the inner hash keys are constraint codes, e.g. `\"at4\"`, `\"ac13\"` or paths. The indexed `Uri` objects represent references to externally defined resources, either terms, ontology concepts, or terminology subsets / ref-sets.",
            "multiplicity": "0..1",
            "name": "term_bindings",
            "type": "Hash"
        },
        {
            "description": "Archetype that owns this terminology.",
            "multiplicity": "1..1",
            "name": "owner_archetype",
            "type": "ARCHETYPE"
        },
        {
            "description": "Archetype-local value sets, each keyed by value-set id, i.e. an ac-code.",
            "multiplicity": "0..1",
            "name": "value_sets",
            "type": "Hash"
        },
        {
            "description": "Directory of extracts of external terminologies, as a two-level table. The outer hash keys are terminology ids, e.g. `\"SNOMED_CT\"`, while the inner hash keys are term codes or code-phrases from the relevant terminology, e.g. `\"10094842\"`.",
            "multiplicity": "0..1",
            "name": "terminology_extracts",
            "type": "Hash"
        }
    ],
    "constants": [],
    "functions": [
        {
            "meaning": "Specialisation depth of this artefact. Unspecialised artefacts have depth 0, with each additional level of specialisation adding 1 to the specialisation_depth.",
            "name": "specialisation_depth",
            "parameters": [],
            "return_type": "Integer"
        },
        {
            "meaning": "List of all id codes in the terminology., i.e. the 'id' codes in an ADL archetype, which are the `_node_id_` values on `C_OBJECT` descendants.",
            "name": "id_codes",
            "parameters": [],
            "return_type": "List"
        },
        {
            "meaning": "List of all value term codes in the terminology, i.e. the 'at' codes in an ADL archetype, which are used as possible values on terminological constrainer nodes.",
            "name": "value_codes",
            "parameters": [],
            "return_type": "List"
        },
        {
            "meaning": "List of all value set codes in the terminology defining value sets. These correspond to the 'ac' codes in an ADL archetype.",
            "name": "value_set_codes",
            "parameters": [],
            "return_type": "List"
        },
        {
            "meaning": "True if language `_a_lang_` is present in archetype terminology.",
            "name": "has_language",
            "parameters": [
                {
                    "name": "a_lang",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        },
        {
            "meaning": "True if there are bindings to terminology `_a_terminology_id_` present.",
            "name": "has_terminology",
            "parameters": [
                {
                    "name": "a_terminology_id",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        },
        {
            "meaning": "True if code `_a_code_` defined in this terminology.",
            "name": "has_term_code",
            "parameters": [
                {
                    "name": "a_code",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        },
        {
            "meaning": "Term definition for a code, in a specified language.",
            "name": "term_definition",
            "parameters": [
                {
                    "name": "a_lang",
                    "type": "Object"
                },
                {
                    "name": "a_code",
                    "type": "Object"
                }
            ],
            "return_type": "ARCHETYPE_TERM"
        },
        {
            "meaning": "Binding of constraint corresponding to `_a_code_` in target external terminology `_a_terminology_id_`, as a string, which is usually a formal query expression.",
            "name": "term_binding",
            "parameters": [
                {
                    "name": "a_terminology",
                    "type": "Object"
                },
                {
                    "name": "a_code",
                    "type": "Object"
                }
            ],
            "return_type": "Uri"
        },
        {
            "meaning": "List of terminologies to which term or constraint bindings exist in this terminology, computed from bindings.",
            "name": "terminologies_available",
            "parameters": [],
            "return_type": "List"
        },
        {
            "meaning": "Return an `ARCHETYPE_TERM` from specified terminology extract, for specified term code.",
            "name": "terminology_extract_term",
            "parameters": [
                {
                    "name": "a_terminology_id",
                    "type": "Object"
                },
                {
                    "name": "a_code",
                    "type": "Object"
                }
            ],
            "return_type": "ARCHETYPE_TERM"
        },
        {
            "meaning": "True if there is a provided terminology extract present.",
            "name": "has_terminology_extract",
            "parameters": [
                {
                    "name": "a_terminology_id",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        },
        {
            "meaning": "List of languages in which terms in this terminology are available.",
            "name": "languages_available",
            "parameters": [],
            "return_type": "List"
        }
    ],
    "meta_info": {
        "base_types": null,
        "classifier": "Class",
        "description": "Local terminology of an archetype. This class defines the semantics of the terminology of an archetype.",
        "name": "ARCHETYPE_TERMINOLOGY"
    }
}