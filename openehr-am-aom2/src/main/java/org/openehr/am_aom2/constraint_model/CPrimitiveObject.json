{
    "attributes": [
        {
            "description": "Value to be assumed if none sent in data.",
            "multiplicity": "0..1",
            "name": "assumed_value",
            "type": "Any"
        },
        {
            "description": "True if this object represents a constraint on an enumerated type from the reference model, where the latter is assumed to be based on a primitive type, generally Integer or String.",
            "multiplicity": "0..1",
            "name": "is_enumerated_type_constraint",
            "type": "Boolean"
        },
        {
            "description": "Constraint represented by this object; redefine in descendants.",
            "multiplicity": "1..1",
            "name": "constraint",
            "type": "Any"
        }
    ],
    "constants": [],
    "functions": [
        {
            "meaning": "True if there is an assumed value.",
            "name": "has_assumed_value",
            "parameters": [],
            "return_type": "Boolean"
        },
        {
            "meaning": "Generate name of native type that is constrained by this `C_XXX` type. For most types, it is the `C_XXX` typename without the `C_`, i.e. `XXX`. E.g. `C_INTEGER` -> `Integer`. For the date/time types the mapping is different.",
            "name": "constrained_typename",
            "parameters": [],
            "return_type": "String"
        },
        {
            "meaning": "True if constraints represented by this node, ignoring any sub-parts, are narrower or the same as other.",
            "name": "c_conforms_to",
            "parameters": [
                {
                    "name": "other",
                    "type": "Object"
                },
                {
                    "name": "rmcc",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        },
        {
            "meaning": "True if this node expresses a value constraint that conforms to that of `other`. Effected in descendants.",
            "name": "c_value_conforms_to",
            "parameters": [
                {
                    "name": "other",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        },
        {
            "meaning": "True if constraints represented by this node contain no further redefinitions with respect to the node `_other_`, with the exception of `_node_id_` redefinition in `C_OBJECT` nodes.",
            "name": "c_congruent_to",
            "parameters": [
                {
                    "name": "other",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        },
        {
            "meaning": "True if this node expresses the same value constraint as `other`. Effected in descendants.",
            "name": "c_value_congruent_to",
            "parameters": [
                {
                    "name": "other",
                    "type": "Object"
                }
            ],
            "return_type": "Boolean"
        }
    ],
    "meta_info": {
        "base_types": [
            "C_DEFINED_OBJECT"
        ],
        "classifier": "Class",
        "description": "Parent of types representing constraints on primitive types.",
        "name": "C_PRIMITIVE_OBJECT"
    }
}